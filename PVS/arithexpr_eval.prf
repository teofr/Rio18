(arithexpr_eval
 (eval_TCC1 0
  (eval_TCC1-1 nil 3728375185 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil))
   nil))
 (eval_TCC2 0
  (eval_TCC2-1 nil 3728375185 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC3 0
  (eval_TCC3-1 nil 3728375185
   ("" (skeep :preds? t)
    (("" (typepred "v(x1)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (eval_TCC4 0
  (eval_TCC4-1 nil 3728375185 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC5 0
  (eval_TCC5-1 nil 3728375185
   ("" (skeep :preds? t)
    (("" (typepred "v(x2)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (eval_TCC6 0
  (eval_TCC6-1 nil 3728375185 ("" (grind))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil))
   nil))
 (eval_TCC7 0
  (eval_TCC7-1 nil 3728375185 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC8 0
  (eval_TCC8-1 nil 3728375185
   ("" (skeep :preds? t)
    (("" (typepred "v(x1)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (eval_TCC9 0
  (eval_TCC9-1 nil 3728375185 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC10 0
  (eval_TCC10-1 nil 3728375185
   ("" (skeep :preds? t)
    (("" (typepred "v(x2)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (eval_TCC11 0
  (eval_TCC11-1 nil 3728375185 ("" (grind))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil))
   nil))
 (eval_TCC12 0
  (eval_TCC12-1 nil 3728375185 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC13 0
  (eval_TCC13-1 nil 3728375185
   ("" (skeep :preds? t)
    (("" (typepred "v(x1)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (eval_TCC14 0
  (eval_TCC14-1 nil 3728375185 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC15 0
  (eval_TCC15-1 nil 3728375185
   ("" (skeep :preds? t)
    (("" (typepred "v(x1)")
      (("1" (typepred "v(x2)")
        (("1" (grind) nil nil) ("2" (grind) nil nil)) nil)
       ("2" (grind) nil nil))
      nil))
    nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   shostak))
 (eval_TCC16 0
  (eval_TCC16-1 nil 3728375185 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil))
   nil))
 (eval_TCC17 0
  (eval_TCC17-1 nil 3728375185
   ("" (skeep :preds? 1)
    (("" (expand <<) (("" (assert) (("" (grind) nil nil)) nil)) nil))
    nil)
   ((<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   shostak))
 (eval_TCC18 0
  (eval_TCC18-1 nil 3729439252
   ("" (skeep :preds? 1)
    (("" (typepred "v(x1)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (eval_TCC19 0
  (eval_TCC19-1 nil 3729439252 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC20 0
  (eval_TCC20-1 nil 3729439252
   ("" (skeep :preds? 1)
    (("" (typepred "v(x2)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (eval_TCC21 0
  (eval_TCC21-1 nil 3729439252
   ("" (skeep :preds? 1) (("" (assert) (("" (grind) nil nil)) nil))
    nil)
   ((NumExpr adt-def-decl "boolean" ArithExpr_adt nil)) nil))
 (eval_TCC22 0
  (eval_TCC22-1 nil 3729439252 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC23 0
  (eval_TCC23-1 nil 3729439252
   ("" (skeep :preds? 1)
    (("" (typepred "v(b)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (eval_TCC24 0
  (eval_TCC24-1 nil 3729439252
   ("" (skeep :preds? 1) (("" (grind) nil nil)) nil)
   ((NumExpr adt-def-decl "boolean" ArithExpr_adt nil)) nil))
 (eval_TCC25 0
  (eval_TCC25-1 nil 3729439252 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC26 0
  (eval_TCC26-1 nil 3729439252
   ("" (skeep :preds? 1)
    (("" (typepred "v(b)") (("" (grind) nil nil)) nil)) nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (eval_TCC27 0
  (eval_TCC27-1 nil 3729439252 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC28 0
  (eval_TCC28-1 nil 3729439252
   ("" (skeep :preds? 1)
    (("" (typepred "v(x1)")
      (("1" (typepred "v(b)") (("1" (grind) nil nil)) nil)
       ("2" (replace -5)
        (("2" (expand <<) (("2" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil))
   nil))
 (eval_TCC29 0
  (eval_TCC29-1 nil 3729439252 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil))
   nil))
 (eval_TCC30 0
  (eval_TCC30-1 nil 3729439252
   ("" (skeep :preds? 1)
    (("" (typepred "v(b)")
      (("" (typepred "v(x2)")
        (("1" (grind) nil nil)
         ("2" (replace -6)
          (("2" (expand <<) (("2" (propax) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((ValueFor type-eq-decl nil arithexpr_eval nil)
    (bool_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (<< adt-def-decl "(well_founded?[ArithExpr])" ArithExpr_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (real_val? adt-recognizer-decl "[Value -> boolean]" arithexpr_eval
     nil)
    (Value type-decl nil arithexpr_eval nil)
    (BoolExpr type-eq-decl nil ArithExpr_adt nil)
    (nope? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (equals? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NumExpr adt-def-decl "boolean" ArithExpr_adt nil)
    (ArithExpr type-decl nil ArithExpr_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (constant? adt-recognizer-decl "[ArithExpr -> boolean]"
               ArithExpr_adt nil)
    (addition? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (substraction? adt-recognizer-decl "[ArithExpr -> boolean]"
     ArithExpr_adt nil)
    (mult? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (ite? adt-recognizer-decl "[ArithExpr -> boolean]" ArithExpr_adt
     nil)
    (NumExpr type-eq-decl nil ArithExpr_adt nil))
   nil)))

